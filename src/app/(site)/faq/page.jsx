"use client"

import { useRef, useState } from "react"
import Link from "next/link"

const FaqsCard = (props) => {

    const answerElRef = useRef()
    const [state, setState] = useState(false)
    const [answerH, setAnswerH] = useState('0px')
    const { faqsList, idx } = props

    const handleOpenAnswer = () => {
        const answerElH = answerElRef.current.childNodes[0].offsetHeight
        setState(!state)
        setAnswerH(`${answerElH + 20}px`)
    }

    return (
        <div 
            className="space-y-3 mt-5 overflow-hidden border-b"
            key={idx}
            onClick={handleOpenAnswer}
        >
            <h4 className="cursor-pointer pb-5 flex items-center justify-between text-lg text-gray-700 font-medium">
                {faqsList.q}
                {
                    state ? (
                        <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 text-gray-500 ml-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4" />
                        </svg>
                    ) : (
                        <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 text-gray-500 ml-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 4v16m8-8H4" />
                        </svg>
                    )
                }
            </h4>
            <div
                ref={answerElRef} className="duration-300"
                style={state ? {height: answerH } : {height: '0px'}}
            >
                <div>
                    <p className="text-gray-500">
                        {faqsList.a}
                    </p>
                </div>
            </div>
        </div>
    )
}

export default function Faq() {

    const faqsList = [
        {
            q: "What is IntelliBlog?",
            a: "IntelliBlog is a cutting-edge platform that transforms videos into compelling blog posts. Using the power of artificial intelligence, we convert YouTube video URLs, uploaded videos, or prompt-based descriptions into high-quality written content."
        },
        {
            q: "How does IntelliBlog work?",
            a: "Our AI-powered platform utilizes advanced natural language processing algorithms to analyze the audio and visual content of your videos. It then generates well-structured and engaging blog posts, capturing the essence of the original video seamlessly."
        },
        {
            q: "What types of videos can I use with IntelliBlog?",
            a: "IntelliBlog supports a wide range of video formats, including YouTube video URLs and various file types such as mp3, mp4, mpeg, mpga, m4a, wav, and webm. This flexibility allows you to utilize diverse content sources for generating your blog posts."
        },
        {
            q: "Is the content generated by IntelliBlog unique and plagiarism-free?",
            a: "Yes, IntelliBlog ensures the content it generates is original and free from plagiarism concerns. The AI creates unique blog posts tailored to the specific video content provided."
        },
        {
            q: "How secure is my data on IntelliBlog?",
            a: "We take data security and privacy seriously. All user information and uploaded files are encrypted and protected using industry-standard security measures to ensure your data remains safe."
        }
    ];
  
    return (
        <section className="leading-relaxed max-w-screen-xl mt-12 mx-auto px-4 md:px-8">
            <div className="space-y-3 text-center">
                <h1 className="text-3xl text-gray-800 font-semibold">
                    Frequently Asked Questions
                </h1>
                <p className="text-gray-600 max-w-lg mx-auto text-lg">
                    Here are some of our frequently asked questions. Still confused? feel free to <Link className="text-blue-500" href="/contact">contact us</Link>.
                </p>
            </div>
            <div className="mt-14 max-w-2xl mx-auto">
                {
                    faqsList.map((item, idx) => (
                        <FaqsCard
                            idx={idx}
                            faqsList={item}
                        />
                    ))
                }
            </div>
        </section>
    )
}